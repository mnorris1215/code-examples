    # Supervisor is used to control a number of processes inside a container

    # Server side configs. Responsible for starting child programs, responding to client,
    # restarting child processes, and generating and handling events
[supervisord]

    # Instructs supervisor to start in the foreground instead of as a service. This lets
    # Docker manage its lifecycle.
nodaemon=true

    #A file containing the process (in this case, supervisord) ID number that is stored in the filesystem. Daemons need
    #the pid of the scripts that are currently running in the background to send them signals
pidfile=/tmp/supervisord.pid

    # Path to the activity log of the supervisord process. If this is set to a special
    # file path that is not seekable, log rotation must be disabled
logfile=/dev/null

    #The max number of bytes that may be consumed by the activity log file before it is rotated.
    #Set this value to 0 to indicate an unlimited log size.
    # Must be disabled if the logfile is not seekable.
logfile_maxbytes=0

    #Instruct supervisord to switch users to this UNIX user account before doing any
    #meaningful processing. The user can only be switched if supervisord is started as the root user.
user=root






[program:php-fpm]

    #Every process is created with only these 3 file descriptors: stdin, stdout, stderr.
    #They are called The Standard Streams
command= php-fpm7 -F
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

    # Supervisor starts all programs during its startup
autostart=true

    #Supervisor tries to restart programs only if they exit with an error. This restarts
    #programs every time instead
autorestart=true




[program:nginx]
command= nginx -g 'daemon off;'
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
autostart=true
autorestart=true
