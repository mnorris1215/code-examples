    # nginx consists of modules which are controlled by directives (simple or block)
    # Simple directives end in ;
    # block directives use brackets
    # A block directive containing other block directives is called a context

server {

        # When a server is set up, it is configured to use a directory somewhere on disk
        # as its root directory and it expects a default file name (say, index.html) to
        # be in every directory

    root /:project;
    index index.html index.php;

    include mime.types;
    client_max_body_size 100m;
    client_body_buffer_size 100m;

        # Used for faster access and downloads, also saves bandwidth. Data Compressor
    gzip on;
    gzip_disable "msie6";

        # Enables inserting the "Vary: Accept-Encoding" response header field if the
        # directives gzip, gzip static, or gunzip are active.
    gzip_vary on;
        #enables compression for all proxied requests.
    gzip_proxied any;

        #Sets compression level from 1-9 of a response.
    gzip_comp_level 6;

        #Sets num and size of buffers used to compress a response.
    gzip_buffers 16 8k;

        #Min http version
    gzip_http_version 1.1;

        # Dont compress files smaller than 256 bytes
    gzip_min_length 256;

    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml
    application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype
    image/svg+xml image/x-icon;

    types
    {
        application/vnd.openxmlformats-officedocument.wordprocessingml.document docx;
    }

        # Each location is used to handle a certain type of client request.

    location ~* \.(?:ico|css|js|gif|inc|txt|gz|xml|png|jpe?g)$ {
        expires max;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        access_log off; log_not_found off;
    }

    location ~ /\.ht {
        deny all;
    }

        # Fallback url for all locations

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

        # Location for php requests

    location ~ \.php$ {
        try_files $uri = 404;
        fastcgi_pass unix:/var/run/php-fpm.sock;
        fastcgi_intercept_errors on;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }
}
